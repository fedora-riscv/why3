diff --git a/modules/mach/int.mlw b/modules/mach/int.mlw
index 5a3374e..c7de56d 100644
--- a/modules/mach/int.mlw
+++ b/modules/mach/int.mlw
@@ -13,7 +13,8 @@ module Int
   use export int.ComputerDivision
 
   let (/) (x: int) (y: int)
-    requires { y <> 0 } ensures { result = div x y }
+    requires { "expl:division by zero" y <> 0 } 
+    ensures  { result = div x y }
   = div x y
 
 end
diff --git a/theories/map.why b/theories/map.why
index c9c9cca..235b944 100644
--- a/theories/map.why
+++ b/theories/map.why
@@ -219,7 +219,7 @@ theory Occ
   lemma occ_bounds:
     forall v: 'a, m: map int 'a, l u: int.
     l <= u -> 0 <= occ v m l u <= u - l
-    (* direct when l>=u, by induction on b when l <= u *)
+    (* direct when l>=u, by induction on u when l <= u *)
 
   lemma occ_append:
     forall v: 'a, m: map int 'a, l mid u: int.
diff --git a/configure.in b/configure.in
index 6aef58c..cd16de1 100644
--- a/configure.in
+++ b/configure.in
@@ -354,7 +354,7 @@ if test "$enable_zarith" = yes; then
          AC_MSG_WARN([Lib Zarith not found, using Nums instead.])
          reason_zarith=" (zarith not found)"
       else
-         BIGINTINCLUDE="+zarith"
+         BIGINTINCLUDE="-I +zarith"
       fi
    fi
 fi
diff --git a/configure b/configure
index 6aef58c..cd16de1 100755
--- a/configure
+++ b/configure
@@ -3617,7 +3617,7 @@
 $as_echo "$as_me: WARNING: Lib Zarith not found, using Nums instead." >&2;}
          reason_zarith=" (zarith not found)"
       else
-         BIGINTINCLUDE="+zarith"
+         BIGINTINCLUDE="-I +zarith"
       fi
    fi
 fi
