--- configure.in.orig	2020-09-11 08:06:19.000000000 -0600
+++ configure.in	2021-02-06 20:18:51.197299198 -0700
@@ -869,6 +869,9 @@ if test "$enable_coq_support" = yes; the
       8.12*)
          coq_compat_version="COQ812"
          ;;
+      8.13*)
+         coq_compat_version="COQ813"
+         ;;
       *)
          enable_coq_support=no
          AC_MSG_WARN(You need Coq 8.6 or later; Coq discarded)
--- configure.orig	2020-09-11 08:06:19.000000000 -0600
+++ configure	2021-02-06 20:19:13.736250432 -0700
@@ -5365,6 +5365,9 @@ $as_echo "$COQVERSION" >&6; }
       8.12*)
          coq_compat_version="COQ812"
          ;;
+      8.13*)
+         coq_compat_version="COQ813"
+         ;;
       *)
          enable_coq_support=no
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: You need Coq 8.6 or later; Coq discarded" >&5
--- lib/coq/ieee_float/GenericFloat.v.orig	2020-09-11 08:06:19.000000000 -0600
+++ lib/coq/ieee_float/GenericFloat.v	2021-02-06 20:19:40.687192153 -0700
@@ -3726,7 +3726,8 @@ Proof.
   assert (- pow2sb <= pow2sb <= pow2sb)%Z.
   split; auto with zarith.
   assert (0 < pow2sb)%Z.
-  apply (Z.pow_pos_nonneg 2 sb); auto with zarith.
+  apply (Z.pow_pos_nonneg 2 sb).
+  easy.
   apply Z.lt_le_incl, Hsb'.
   auto with zarith.
 
--- lib/coq/set/FsetInt.v.orig	2020-09-11 08:06:19.000000000 -0600
+++ lib/coq/set/FsetInt.v	2021-02-06 20:21:15.476987120 -0700
@@ -166,15 +166,13 @@ induction len; eauto.
 intros. simpl. rewrite IHlen. reflexivity.
 Qed.
 
-(* Why3 goal *)
-Definition interval :
-  Numbers.BinNums.Z -> Numbers.BinNums.Z -> set.Fset.fset Numbers.BinNums.Z.
+Lemma interval_proof :
+  forall l r : int, exists s : list int,
+  List.NoDup s /\
+  forall e : int, List.In e s <->
+   (if Z_le_dec l e then if Z_lt_dec e r then true else false else false) = true.
 Proof.
 intros l r.
-exists (fun x => if Z_le_dec l x then 
-                   if Z_lt_dec x r then true 
-                   else false 
-                 else false).
 destruct (Z_le_dec l r).
 + exists (seqZ l (Z.to_nat (r - l))%Z).
   split. 
@@ -185,8 +183,8 @@ destruct (Z_le_dec l r).
     destruct Z_le_dec.
     * destruct Z_lt_dec. split; intros; [reflexivity|].
       intuition.
-      intuition. inversion H.
-    * intuition. inversion H.
+      intuition ; try inversion H.
+    * intuition ; try inversion H.
 + exists List.nil. 
   split.
   - constructor.
@@ -195,6 +193,18 @@ destruct (Z_le_dec l r).
     omega.
     inversion H.
     inversion H.
+Qed.
+
+(* Why3 goal *)
+Definition interval :
+  Numbers.BinNums.Z -> Numbers.BinNums.Z -> set.Fset.fset Numbers.BinNums.Z.
+Proof.
+intros l r.
+exists (fun x =>
+  if Z_le_dec l x then
+    if Z_lt_dec x r then true else false
+  else false).
+apply interval_proof.
 Defined.
 
 (* Why3 goal *)
--- share/provers-detection-data.conf.orig	2020-09-11 08:06:19.000000000 -0600
+++ share/provers-detection-data.conf	2021-02-06 20:21:48.348916001 -0700
@@ -751,6 +751,7 @@ support_library = "%l/coq/version"
 exec = "coqtop"
 version_switch = "-v"
 version_regexp = "The Coq Proof Assistant, version \\([^ \n]+\\)"
+version_ok = "^8\.13\.[0-9]+$"
 version_ok = "^8\.12\.[0-9]+$"
 version_ok = "^8\.11\.[0-9]+$"
 version_ok = "^8\.10\.[0-9]+$"
